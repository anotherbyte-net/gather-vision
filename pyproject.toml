[build-system]
requires = [
    "setuptools>=63.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "gather-vision"
description = "Obtain, extract, organise, and store information. "
readme = "README.md"
requires-python = ">=3.7"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Development Status :: 3 - Alpha",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Utilities",
]
dynamic = [
    "version",
    "dependencies",
    "optional-dependencies",
]

[project.urls]
"Homepage" = "https://github.com/anotherbyte-net/gather-vision"
"Changelog" = "https://github.com/anotherbyte-net/gather-vision/blob/main/CHANGELOG.md"
"Source" = "https://github.com/anotherbyte-net/gather-vision"
"Tracker" = "https://github.com/anotherbyte-net/gather-vision/issues"

[project.scripts]
gather-vision = 'gather_vision.cli:main'

[tool.setuptools.packages.find]
where = [
    "src",
]
# include and exclude accept strings representing glob patterns.
include = [
    "gather_vision*",
]

[tool.setuptools.dynamic]
version = { file = [
    "VERSION",
] }
dependencies = { file = [
    "requirements.txt",
] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = [
    "requirements-dev.txt",
] }

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --quiet"
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]

[tool.coverage.run]
# "Specifying the source option enables coverage.py to report on unexecuted files,
# since it can search the source tree for files that havenâ€™t been measured at all."
source = [
    'src',
]
omit = [
    '*/site-packages/*',
    'tests/*',
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.html]
directory = "coverage-html"

[tool.isort]
profile = "black"
src_paths = [
    "src",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py37,py38,py39,py310,py311

[testenv]
recreate = true
deps =
    -r requirements.txt
    -r requirements-dev.txt
allowlist_externals =
    echo
commands =
    echo "::group::Show app help"
    gather-vision --version
    gather-vision --help
    echo "::endgroup::"
    echo "::group::Outdated deps"
    -pip list --outdated
    echo "::endgroup::"
    echo "::group::Test coverage"
    python -X dev -m coverage run -m pytest --tb=line --doctest-modules
    echo "::endgroup::"
    echo "::group::Coverage report"
    -python -X dev -m coverage report
    echo "::endgroup::"
    echo "::group::Linter - mypy"
    -python -X dev -m mypy src
    echo "::endgroup::"
    echo "::group::Linter - black"
    -python -X dev -m black --check src
    echo "::endgroup::"
    echo "::group::Linter - pylint"
    -python -X dev -m pylint src
    echo "::endgroup::"
    echo "::group::Linter - pydocstyle"
    -python -X dev -m pydocstyle src
    echo "::endgroup::"
    echo "::group::Linter - pyright"
    -python -X dev -m pyright src
    echo "::endgroup::"
    echo "::group::Linter - flake8"
    -python -X dev -m flake8 src --count --show-source --statistics --exit-zero
    echo "::endgroup::"
    echo "::group::Linter - pytype"
    -python -X dev -m pytype -j auto
    echo "::endgroup::"
    echo "::group::Build"
    python -m build --sdist --wheel --outdir dist/ .
    echo "::endgroup::"
"""

[tool.pydocstyle]
convention = 'google'

[tool.mypy]
ignore_missing_imports = true
