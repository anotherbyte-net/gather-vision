[build-system]
requires = [
    "setuptools>=63.0.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "gather-vision"
description = "Obtain, extract, organise, and store information. "
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Environment :: Console",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Utilities",
]
dynamic = [
    "version",
    "dependencies",
    "optional-dependencies",
]

[project.urls]
"Homepage" = "https://github.com/anotherbyte-net/gather-vision"
"Changelog" = "https://github.com/anotherbyte-net/gather-vision/blob/main/CHANGELOG.md"
"Source" = "https://github.com/anotherbyte-net/gather-vision"
"Tracker" = "https://github.com/anotherbyte-net/gather-vision/issues"

[project.scripts]
gather-vision = 'gather_vision.cli:main'

[tool.setuptools.packages.find]
where = [
    "src",
]
# include and exclude accept strings representing glob patterns.
include = [
    "gather_vision*",
]

[tool.setuptools.dynamic]
version = { file = [
    "VERSION",
] }
dependencies = { file = [
    "requirements.txt",
] }

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = [
    "requirements-dev.txt",
] }

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra --quiet"
pythonpath = [
    "src",
]
testpaths = [
    "tests",
]
DJANGO_SETTINGS_MODULE = "gather_vision.proj.settings"
#SCRAPY_SETTINGS_MODULE = "gather_vision.proj.settings_scrapy"

[tool.coverage.run]
# "Specifying the source option enables coverage.py to report on unexecuted files,
# since it can search the source tree for files that havenâ€™t been measured at all."
source = [
    'src',
]
omit = [
    '*/site-packages/*',
    'tests/*',
]

[tool.coverage.report]
skip_empty = true

[tool.coverage.html]
directory = "coverage-html"

[tool.isort]
profile = "black"
src_paths = [
    "src",
]

[tool.tox]
legacy_tox_ini = """
[tox]
isolated_build = True
envlist = py310,py311,py312

[testenv]
recreate = true
deps =
    -r requirements.txt
    -r requirements-dev.txt
allowlist_externals =
    echo
commands =
    echo "::group::Show app help"
    echo "::endgroup::"
    echo "::group::Outdated deps"
    -pip list --outdated
    echo "::endgroup::"
    echo "::group::Test coverage"
    python -X dev -m coverage run -m pytest --doctest-modules
    echo "::endgroup::"
    echo "::group::Coverage report"
    -python -X dev -m coverage report
    echo "::endgroup::"
    echo "::group::Type checker - mypy"
    -python -X dev -m mypy src --any-exprs-report .local/mypy-rpt/{env_name}/any-exprs-report --cobertura-xml-report .local/mypy-rpt/{env_name}/cobertura-xml-report --html-report .local/mypy-rpt/{env_name}/html-report --linecount-report .local/mypy-rpt/{env_name}/linecount-report --linecoverage-report .local/mypy-rpt/{env_name}/linecoverage-report --lineprecision-report .local/mypy-rpt/{env_name}/lineprecision-report --txt-report .local/mypy-rpt/{env_name}/txt-report --xml-report .local/mypy-rpt/{env_name}/xml-report
    echo "::endgroup::"
    echo "::group::Type checker - pytype"
    -python -X dev -m pytype src
    echo "::endgroup::"
    echo "::group::Type checker - pyright"
    -python -X dev -m pyright src
    echo "::endgroup::"
    echo "::group::Type checker - pyre"
    -python -X dev -m pyre src
    echo "::endgroup::"
    echo "::group::Linter - black"
    -python -X dev -m black --check src
    echo "::endgroup::"
    echo "::group::Linter - pylint"
    -python -X dev -m pylint src
    echo "::endgroup::"
    echo "::group::Linter - pydocstyle"
    -python -X dev -m ruff src
    echo "::endgroup::"
    echo "::group::Linter - bandit"
    -python -X dev -m bandit -r src
    echo "::endgroup::"
    echo "::group::Linter - pyupgrade"
    -python -X dev -m pyupgrade src
    echo "::endgroup::"
    echo "::group::Build"
    python -m build --sdist --wheel --outdir build/dist-test/{env_name}/ .
    echo "::endgroup::"
"""

[tool.pydocstyle]
convention = 'google'

[tool.mypy]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 88
show-fixes = true
src = [
    ".",
]
extend-exclude = [
    ".venv",
    "tests",
    "**/migrations",
]
select = [
    "ALL",
]
ignore = [
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "ERA001", # commented-out-code
    "RET504", # Unnecessary variable assignment before `return` statement
    "TD002", # Missing author in TODO; try: `# TODO(<author_name>): ...`
    "TD003", # Missing issue link on the line following this TODO
]

[tool.ruff.pydocstyle]
convention = "google"
